메모리 영역 구분
1. 클래스 영역 (정적 영역, 상수 영역, 메서드 영역)
   프로그램 실행에 대한 코드, static 변수 및 method, 런타임 상수 풀이 생성된다.
   이 영역에 저장된 내용은 프로그램 시작 전에 로드되고 프로그램 종료시 소멸된다.
2. 스택 영역
   메서드가 호출되면 지역변수, 매개변수가 프레임 형태로 생성되어 스택 영역으로 쌓였다가 사라진다.
   이 때 프레임 영역을 벗어난 다른 메서드의 변수들은 서로 참조할 수 없다.
3. 힙 영역
   클래서의 객체(인스턴스), 배열이 new 연산자에 의해 힙 영역에 동적이로 생성된다.
   생성된 객체는 가비지 컬렉터에 의해 사용이 없음이 확인되면 자동으로 제거된다.


자료형(기본형)
1.  정수형 : byte, short, int, long
   - byte : 1바이트. 기본값은 0. -2^7 ~ +2^7-1
   - short : 2바이트. 기본값은 0. -2^15 ~ +2^15-1
   - int : 4바이트. 기본값은 0. 	-2^31 ~ +2^31-1
   - long : 8바이트. 기본값은 0L. 뒤에 L을 붙여줘야 함. -2^63 ~ +2^63-1
2. 실수형 : float, double
   - float : 4바이트. 기본값은 0.0f. 뒤에 f를 붙여줘야 함. -3.4E38 ~ +3.4E38
   - double : 8바이트.  기본값은 0.0d. 뒤에 d를 붙여줘야 함. -1.7E308 ~ +1.7E308
3. 문자형 : char. 2바이트. 기본값은 \0 또는 \u0000.
4. 논리형 : boolean. 1바이트. 기본값은 false.


배열 : 여러 개의 데이터를 하나의 이름으로 그룹핑해서 관리 하기 위한 자료구조
- 저장방식 : 정해진 공간이 있고,그 모든 곳의 식별자(인덱스)가 존재한다.
- 크기할당 : 객체 생성시 크기 할당 필수.
- 속도 : 삽입/삭제는 느리고 데이터 조회는 빠르다.
- 배열 선언 방법
   1) 타입[] 변수이름;   ex. int[] score; 
   2) 타입 변수이름[]; String[] name;   ex. int score[]; String name[];


List : 객체를 일렬로 늘어놓은 구조
- 저장방식 : 식별자(인덱스) 없음, 앞의 요소가 삭제되면 새로 추가되는 요소가 그 공간에 저장될 수 있음
- 크기할당 : 필요 없다.
- 속도 : 삽입/삭제는 빠르고 데이터 조회는 느리다.
- 종류
   1) ArrayList
       Object[] 배열을 사용하면서 내부 구현을 통해 동적으로 관리를 한다.
       ArrayList에 객체를 추가하면 객체가 인덱스로 관리된다.
       일반 배열과 ArrayList는 인덱스로 객체를 관리한다는 점에서는 유사하지만, 큰 차이점은 배열은 사용중에 크기를 변경할 수 없지만,  저장용량(capacity)을 초과한 객체들이 들어오면 자동적으로 저장 용량(capacity)이 늘어난다.
       따라서 빈번한 객체 삭제와 삽입이 일어나는 곳에서는 ArrayList를 사용하는 것이 바람직하지 않다
   2) Vector
       ArrayList와 동일한 구조를 가지고 있다.
   3) LinkedList
       데이터(item)와 주소로 이루어진 클래스를 만들어 서로 연결하는 방식이다.
       데이터와 주소로 이루어진 클래스를 Node(노드)라고 하는데, 각 노드는 이전의 노드와 다음 노드를 연결하는 방식이다.
       ArrayList는 인덱스로 관리되지만, LinkedList는 인접 참조를 링크해서 체인처럼 관리한다.
       LinkedList에서 특정 인덱스의 객체를 제거하면 앞뒤 링크만 변경되고 나머지 링크는 변경되지 않는다.
       객체를 삽입할 때에도 동일하게 나머지 링크는 변경 되지 않는다. 
       그렇기 때문에 빈번한 객체 삭제와 삽입이 일어나느 곳에서는 ArrayList보다 LinkedList가 좋은 성능을 발휘한다.
   4) Stack
       Last in First out 구조이다.



자주 쓰이는 자료형
	int
	long
	double
	boolean
	char
	String
	StringBuffer : 문자열을 추가하거나 변경 할 때 주로 사용하는 자료형
	List
	Map : Key와 Value 한 쌍으로 이루어진 자료형.
	Set : 데이터 자료구조중 하나로 특정한 값들을 저장하는 추상자료형. 이 때 값들은 순서가 존재하지 않고 중복되지 않는다.


특수문자
	문자표현		이름				의미
	  \n		New line			새로운(다음) 행으로 이동
	  \t		Tab				탭만큼 이동
	  \b		Back space		하나 뒤로 이동
	  \r		Carriage return		현재 행의 처음으로 이동
	  \f		Form feed			새 페이지의 처음으로 이동
	  \\		Back slash			\(역슬래시) 문자
	  \'		Single quote		'(작은 따옴표) 문자
	  \"		Double quote		"(큰 따옴표) 문자
	  \ddd	d는 8진수의 한 자릿수	\0에서 \377(\u00ff)까지, 8비트의 정보만 입력가능
	  \udddd	d는 16진수의 한 자릿수	반드시 4자리를 기술



자바의 지시자
	%b : boolean
	%d : decimal integer
	%o : octal integer
	%x, %X : hexadecimal integer
	%f : decimal float
	%e, %E : exponent
	%c : character
	%s : string