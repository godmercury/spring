 APM (Application Performance Management)
애플리케이션의 웹 서비스 성능을 관리하기 위해 모니터링하는 도구로 
웹 서비스의 동작 상태를 관찰하고 성능을 분석하고, 
특히 미들웨어(WebLogic, Tomcat, JBOSS 등)에서 일어나는 트랜잭션의 사용 시간을 분석하여 각 단계별로 성능에 영향을 미치는 원인을 분석할 수 있다.
APM을 쓰는 이유는 어떤 문제가 발생했을 때 아주 빠르게 왜 발생했는지 알 수 있기 때문이다.


개발자 시점
- 자신이 만든 코드 중, 어느 것이 느린지 파악하기 위해서 APM이 필요하다.
- 개발 환경에서는 정상적이고, 빠르게 응답을 하였으나, 운영 환경에서는 그렇지 않을 수 있으므로 어느 부분이 느린지, Code level로 성능을 측정할 수 있게 해 주는 것이 APM 이다.

운영자 시점
- 서비스에 장애가 발생하였을 때에, APM 이 없다면, 어떤 부분이 장애인지 파악조차 할 수가 없게 될 가능성이 높다.
- 운영자는 APM 을 통해 시스템의 디스크, 네트워크, Application 등 어느 부분이 문제인지 빠르게 파악하고, 문제가 있는 부분에 관련된 사람과 객관적인 자료를이용하여 커뮤니케이션을 할 수 있다.

고객 시점
- 서비스 전체에 대한 책임을 가지고 있는 사람으로서, 장애가 나지 않게 서비스를 제공하는 책임이 있다.
- 서비스에 장애가 발생하였을 때에 문제를 빠르게 파악할 수 있어야 되고, 구체적으로 파악한 문제를 바탕으로 복구를 진행하여야 하는데 이때 APM을 통해 원인을 파악할 수 있다.


Code level로 분석해주는 APM
- New Relic
- Dynatrace
- DataDog
- Sentry


Java 어플리케이션을 모니터링
- Jennifer
- Scouter