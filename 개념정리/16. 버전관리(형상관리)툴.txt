버전관리 시스템 : 소프트웨어 개발 및 유지 보수 과정에서 발생하는 소스 코드, 문서 등의 생성, 변경 이력, 삭제 이력 등을 관리하는 것


형상관리(Version Control Revision Control) 툴
- 소프트웨어 버전 관리 툴이라고도 한다.
- 형상관리는 소스의 변화를 끊임없이 관리하는 것을 말한다.
- 소스를 버전 별로 관리할 수 있어서 개발할 때 실수로 소스를 삭제하거나, 수정하기 이전으로 돌아가야되는 경우 유용하게 사용되는 툴.
- 팀 프로젝트에서도 누가 무엇을 어떻게 수정했는지도 알 수 있기 때문에 코드를 병합하거나 수정된 소스를 추적하는 데에도 쓰인다.

형상관리툴 종류
- Client/Server 타입: Subversion(SVN), CVS, Perforce, ClearCase, TFS
- 분산저장소 타입 : Git, Mercurial, Bitkeeper, SVK, Darcs
- Folder 공유 타입 : RCS, SCCS 

SVN
- 2000년대에 CVS를 대체하기 위해 만들어졌다.
- 대부분의 기능을 완성해놓고 소스를 중앙 저장소에 저장한다(commit)
- 개발자가 자신만의 버전 히스토리를 가질 수 없다.
- commit 한 내용에 실수가 있을 경우 다른 개발자에게 바로 영향을 미치게 되는 단점이 있다.

GIT
- 매우 빠른 속도의 분산형 저장소.
- SVN보다 많은 기능을 지원하는 대신 익숙해지기 위해 많은 시간이 필요하다.
- 개발자가 자신만의 커밋 히스토리를 가질수 있고, 개발자와 서버의 저장소는 독립적으로 관리가 가능하다.
- commit한 내용에 실수가 있더라도 바로 서버에 영향을 미치지 않는다.
- 개발자는 마음대로 commit 혹은 push 하다가 자신이 원하는 순간에 변경 내역(commit history)을 보낼 수 있으며, 서버의 통합 관리자는 관리자가 원하는 순간에 각 개발자의 commit history를 가져올 수 있다.

SVN과 Git의 차이점
- SVN은 중앙 서버에 소스코드와 히스토리를 관리하고 Git은 여러 개발 PC와 저장소에 분산해서 저장한다.
- Git은 사본을 로컬에서 관리하기 때문에 SVN에 비해 훨씬 빠르다 (SVN은 변경 로그를 보는 것도 인터넷을 경유해야 한다)