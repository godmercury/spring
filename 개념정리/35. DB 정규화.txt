DB 정규화 : 이상현상이 있는 릴레이션을 분해하여 이상현상을 없애는 과정

장점
- 데이터베이스 변경 시 이상 현상(Anomaly)을 제거할 수 있다.
- 정규화된 데이터베이스 구조에서는 새로운 데이터 형의 추가로 인한 확장 시, 그 구조를 변경하지 않아도 되거나 일부만 변경해도 된다.
- 데이터베이스와 연동된 응용 프로그램에 최소한의 영향만을 미치게 되어 응용프로그램의 생명을 연장시킨다

단점
- 릴레이션의 분해로 인해 릴레이션 간의 JOIN연산이 많아진다
- 질의에 대한 응답 시간이 느려질 수도 있다. 데이터의 중복 속성을 제거하고 결정자에 의해 동일한 의미의 일반 속성이 하나의 테이블로 집약되므로 한 테이블의 데이터 용량이 최소화되는 효과가 있다. 
- 따라서 데이터를 처리할 때 속도가 빨라질 수도 있고 느려질 수도 있다.
- 만약 조인이 많이 발생하여 성능 저하가 나타나면 반정규화(De-normalization)를 적용할 수도 있다.



정규화 절차
- 제1정규화	: 속성(Attribute)의 원자성을 확보하고 원자값이 아닌 도메인을 분해한다.
- 제2정규화	: 기본키가 2개 이상의 속성으로 이루어진 경우, 부분 함수 종속성을 제거(분해)한다.
- 제3정규화	: 기본키를 제외한 컬럼간의 종속성을 제거한다. 즉 이행 함수 종속성을 제거한다.
- BCNF	: 기본키를 제외하고 후보키가 있는 경우 후보키가 기본키를 종속시키면 분해한다.
- 제4정규화	: 여러 컬럼들이 하나의 컬럼을 종속시키는 경우 분해하여 다중값 종속성을 제거한다.
- 제5정규화	: 조인에 의해서 종속성이 발생하는 경우 분해한다.


1. 제1정규형(1NF)
- 각 컬럼이 하나의 속성만을 가져야 한다.
- 하나의 컬럼은 같은 종류나 타입(type)의 값을 가져야 한다.
- 각 컬럼이 유일한(unique) 이름을 가져야 한다.
- 칼럼의 순서가 상관없어야 한다.

2. 제2정규형(2NF)
- 1정규형을 만족해야 한다.
- 모든 컬럼이 부분적 종속(Partial Dependency)이 없어야 한다. == 모든 칼럼이 완전 함수 종속을 만족해야 한다.

3. 제3정규형(3NF)
- 2 정규형을 만족해야 한다.
- 기본키를 제외한 속성들 간의 이행 종속성 (Transitive Dependency)이 없어야 한다.

4. BCNF (Boyce-Codd Normal Form)
- 3정규형을 만족해야 한다.
- 모든 결정자가 후보키 집합에 속해야 한다.

5. 제4 정규형(4NF)
- BCNF를 만족해야 한다.
- 다치 종속(Multi-valued Dependency)이 없어야 한다.


참조URL : 
https://code-lab1.tistory.com/48
https://coding-factory.tistory.com/872